http:
  port: 8000

apiEndpoints:
  isolation-api:
    host: '*'
    paths:
      - '/isolation/v1/*'  # Added the missing closing quotation mark
  tenant-api:
    host: '*'
    paths:
      - '/tenant/v1/tenant/'

  company-api:
    host: '*'
    paths:
      - '/tenant/v1/company/' 

  auth-api:
    host: '*'
    paths:
      - '/auth/v1/*'

  # Replace with your actual microservices    
  sb:
    host: '*'
    paths:
      - '/sb/v1/*'
  ag:
    host: '*'
    paths:
      - '/ag/v1/*'
  tps:
    host: '*'
    paths:
      - '/tps/v1/*'
  quk:
    host: '*'
    paths:
      - '/quk/v1/*' 
  tn:
    host: '*'
    paths:
      - '/tn/v1/*'
      - '/rest/v2/*'
  tq:
    host: '*'
    paths:
      - '/tq/v1/*'

  doc-v1:
    host: '*'
    paths:
      - '/storage/v1/*'    

  rest-v1:
    host: '*'
    paths:
      - '/rest/v1/passengers'
      - '/rest/v1/passengers/*'
      - '/rest/v1/corporates'
      - '/rest/v1/corporates/*'
      - '/rest/v1/drivers'
      - '/rest/v1/drivers/*'

  fleet-v1:
    host: '*'
    paths:
      - '/rest/v1/assetmake/'
      - '/rest/v1/assetmodel/'
      - '/rest/v1/assetdevicelogs/'
      - '/rest/v1/assetdriverlogs/'
      - '/rest/v1/assetgroup/'
      - '/rest/v1/asset/'
      - '/rest/v1/device/'                   

serviceEndpoints:
  isolation-api:
    url: 'http://192.168.1.7:4007/api/v1'
  tenant-api:
    url: 'http://192.168.1.7:4006/api/v1/tenant'
  company-api:
    url: 'http://192.168.1.7:4006/api/v1/company'  
  auth-api:
    url: 'http://192.168.1.7:4005/api/v1'
  project-setup-api:
    url: 'http://192.168.1.7:4008/api/v1'
  auth-v1-token:
    url: 'http://192.168.1.7:4005/api/v1/token'
  auth-v1-open-verifyEmail:
    url: 'http://192.168.1.7:4005/api/v1/verifyEmail'
  auth-v1-open-resetPassword:
    url: 'http://192.168.1.7:4005/api/v1/resetPassword'

  # Replace with your actual microservices
  sb:
    url: 'http://192.168.1.2:4001/api/v1'
  ag:
    url: 'http://192.168.1.2:4002/api/v1'
  tps:
    url: 'http://192.168.1.2:4008/api/v1'
  quk:
    url: 'http://192.168.1.7:4003/api/v1'
  tn:
    url: 'http://192.168.1.2:4004/api/v1'
  tq:
    url: 'http://192.168.1.10:4009/api/v1' 

  doc-v1:
      url: 'http://192.168.1.7:3000/api/v1'

  # Rest paths
  rest-v1:
    url: 'http://192.168.1.7:6001'
  fleet-v1:
    url: 'http://192.168.1.7:6003'              

policies:
  - cors
  - token-validator
  - proxy

pipelines:
  isolation-apiPipeline:
    apiEndpoints:
      - isolation-api
    policies:
      - token-validator: {}
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          action:
            serviceEndpoint: isolation-api
            stripPath: true

  tenant-apiPipeline:
    apiEndpoints:
      - tenant-api
    policies:
      - token-validator: {} # (Uncomment if you decide to use this policy)
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          action:
            serviceEndpoint: tenant-api
            stripPath: true

  company-apiPipeline:
    apiEndpoints:
      - company-api
    policies:
      - token-validator: {} # (Uncomment if you decide to use this policy)
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          action:
            serviceEndpoint: company-api
            stripPath: true          

  auth-apiPipeline:
    apiEndpoints:
      - auth-api
    policies:
      # - token-validator: {} (Uncomment if you decide to use this policy)
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          action:
            serviceEndpoint: auth-api
            stripPath: true  # Assuming this is supported by your proxy setup

# Replace with your actual microservices pipeline
  sbPipeline:
    apiEndpoints:
      - sb
    policies:
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*' 
      - proxy:
          - action:
              serviceEndpoint: sb
              stripPath: true
  agPipeline:
    apiEndpoints:
      - ag
    policies:
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          - action:
              serviceEndpoint: ag       
              stripPath: true
  tpsPipeline:
    apiEndpoints:
      - tps
    policies:
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          - action:
              serviceEndpoint: tps       
              stripPath: true
  qukPipeline:
    apiEndpoints:
      - quk
    policies:
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          - action:
              serviceEndpoint: quk       
              stripPath: true
  tnPipeline:
    apiEndpoints:
      - tn
    policies:
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          - action:
              serviceEndpoint: tn       
              stripPath: true
  tqPipeline:
    apiEndpoints:
      - tq
    policies:
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          - action:
              serviceEndpoint: tq       
              stripPath: true

  docV1Pipeline:
    apiEndpoints:
      - doc-v1
    policies:
      - token-validator: {}
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          - action:
              serviceEndpoint: doc-v1       
              stripPath: true

  restV1Pipeline:
    apiEndpoints:
      - rest-v1
    policies:
      - token-validator: {}
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          - action:
              serviceEndpoint: rest-v1       
              stripPath: false

  fleetV1Pipeline:
    apiEndpoints:
      - fleet-v1
    policies:
      - token-validator: {}
      - cors: 
            action:
              origin: '*'
              methods: '*'
              allowedHeaders: '*'
      - proxy:
          - action:
              serviceEndpoint: fleet-v1       
              stripPath: false                                                                          